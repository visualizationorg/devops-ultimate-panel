{"version":3,"file":"static/js/584.b86c33b5.chunk.js","mappings":"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","sources":["components/DataGrid.js","pages/admin/user-list.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Portal } from '@mui/base/Portal';\r\nimport { Pagination as MuiPagination } from '@mui/material';\r\n\r\n// mui data grid\r\nimport {\r\n    DataGrid,\r\n    // GridActionsCellItem,\r\n    // GridColumnMenu,\r\n    gridClasses,\r\n    gridPageCountSelector,\r\n    GridPagination,\r\n    // GridToolbar,\r\n    // GridToolbarColumnsButton,\r\n    // GridToolbarContainer,\r\n    // GridToolbarDensitySelector,\r\n    // GridToolbarFilterButton,\r\n    GridToolbarQuickFilter,\r\n    trTR,\r\n    enUS,\r\n    useGridApiContext,\r\n    useGridSelector\r\n} from '@mui/x-data-grid';\r\n\r\n// project-import\r\nimport { ThemeMode } from 'config';\r\n\r\n// third-party\r\nimport { useIntl } from 'react-intl';\r\n\r\n// ==============================|| GRID PAGINATION ||============================== //\r\nfunction Pagination({ page, onPageChange, className }) {\r\n    const apiRef = useGridApiContext();\r\n    const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\n\r\n    return (\r\n        <MuiPagination\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            color=\"primary\"\r\n            className={className}\r\n            count={pageCount}\r\n            page={page + 1}\r\n            onChange={(event, newPage) => {\r\n                onPageChange(event, newPage - 1);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nPagination.propTypes = {\r\n    className: PropTypes.string,\r\n    /**\r\n     * Callback fired when the page is changed.\r\n     *\r\n     * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\r\n     * @param {number} page The page selected.\r\n     */\r\n    onPageChange: PropTypes.func.isRequired,\r\n    /**\r\n     * The zero-based index of the current page.\r\n     */\r\n    page: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction CustomPagination(props) {\r\n    return <GridPagination ActionsComponent={Pagination} {...props} />;\r\n};\r\n\r\nfunction CustomToolbar() {\r\n    return (\r\n        <Portal container={() => document.getElementById('filter-panel')}>\r\n            <GridToolbarQuickFilter variant=\"outlined\" size=\"small\" />\r\n        </Portal>\r\n    );\r\n};\r\n\r\n// ==============================|| GRID SKELETON ||============================== //\r\nexport default function GridSkeleton(props) {\r\n    const theme = useTheme();\r\n    const intl = useIntl();\r\n\r\n    const localeText = useMemo(\r\n        () => {\r\n            if (theme.language === 'tr')\r\n                return trTR.components.MuiDataGrid.defaultProps.localeText;\r\n            // else if (theme.language === 'en')\r\n            else\r\n                return enUS.components.MuiDataGrid.defaultProps.localeText;\r\n        },\r\n        // eslint-disable-next-line\r\n        [theme, intl]\r\n    );\r\n\r\n    return (\r\n        <DataGrid\r\n            {...props}\r\n            localeText={{\r\n                ...localeText,\r\n                MuiTablePagination: {\r\n                    ...localeText.MuiTablePagination,\r\n                    labelDisplayedRows: ({ from, to, count }) =>\r\n                        `${from}-${to} / ${count}`,\r\n                },\r\n            }}\r\n            ignoreDiacritics\r\n            getRowClassName={(params) =>\r\n                params.indexRelativeToCurrentPage % 2 === 0 ? 'even' : 'odd'\r\n            }\r\n            sx={{\r\n                [`& .${gridClasses.row}.even`]: (theme.palette.mode === ThemeMode.LIGHT) ? {\r\n                    backgroundColor: theme.palette.background.default,\r\n                    '&:hover, &.Mui-hovered': {\r\n                        backgroundColor: theme.palette.divider,\r\n                        '@media (hover: none)': {\r\n                            backgroundColor: 'transparent',\r\n                        },\r\n                    },\r\n                } : {},\r\n                ...props.sx\r\n            }}\r\n            slots={{ pagination: CustomPagination, toolbar: CustomToolbar, ...props.slots }}\r\n            // slotProps={{\r\n            //     toolbar: {\r\n            //         showQuickFilter: true,\r\n            //         printOptions: { disableToolbarButton: true },\r\n            //         csvOptions: { disableToolbarButton: true },\r\n            //     },\r\n            // }}\r\n            // style={{ backgroundColor: 'white' }}\r\n            initialState={{\r\n                pagination: {\r\n                    paginationModel: {\r\n                        pageSize: props.pageSize ?? 10,\r\n                        /* page: 0 // default value will be used if not passed */\r\n                    },\r\n                },\r\n            }}\r\n            pageSizeOptions={[10, 25, 50, 100]}\r\n            autoHeight={true}\r\n            disableRowSelectionOnClick\r\n            disableColumnMenu\r\n            disableColumnFilter\r\n            disableColumnSelector\r\n            disableDensitySelector\r\n        />\r\n    );\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { useLoaderData } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Stack } from '@mui/material';\r\n\r\n// project imports\r\nimport CustomGrid from 'components/DataGrid';\r\nimport MainCard from 'components/MainCard';\r\n\r\n// third-party\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\n// ==============================|| USER LIST ||============================== //\r\n\r\nexport default function UserList() {\r\n  const theme = useTheme();\r\n  const intl = useIntl();\r\n\r\n  const items = useLoaderData();\r\n  const rows = items?.value || [];\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        field: 'descriptor',\r\n        headerName: 'ID',\r\n        description: 'ID',\r\n        flex: 1,\r\n        minWidth: 150,\r\n        headerAlign: 'center',\r\n        align: 'center'\r\n      },\r\n      {\r\n        field: 'displayName',\r\n        headerName: intl.formatMessage({ id: \"user\" }),\r\n        description: intl.formatMessage({ id: \"user\" }),\r\n        flex: 1,\r\n        minWidth: 150\r\n      },\r\n      {\r\n        field: 'subjectKind',\r\n        headerName: \"subjectKind\",\r\n        description: \"subjectKind\",\r\n        flex: 1,\r\n        minWidth: 150\r\n      },\r\n      {\r\n        field: 'domain',\r\n        headerName: \"domain\",\r\n        description: \"domain\",\r\n        flex: 1,\r\n        minWidth: 150\r\n      },\r\n      {\r\n        field: 'mailAddress',\r\n        headerName: \"mailAddress\",\r\n        description: \"mailAddress\",\r\n        flex: 1,\r\n        minWidth: 150\r\n      },\r\n      {\r\n        field: 'origin',\r\n        headerName: \"origin\",\r\n        description: \"origin\",\r\n        flex: 1,\r\n        minWidth: 150\r\n      },\r\n    ],\r\n    // eslint-disable-next-line\r\n    [theme, intl]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MainCard\r\n        content={false}\r\n        title={<FormattedMessage id=\"user-list\" />}\r\n        secondary={\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Box id=\"filter-panel\" />\r\n          </Stack>\r\n        }\r\n      >\r\n        <CustomGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          getRowId={(row) => row.descriptor}\r\n          getRowHeight={() => 'auto'}\r\n          sx={{\r\n            \"& .MuiDataGrid-columnHeaderTitle\": {\r\n              whiteSpace: \"normal\",\r\n              lineHeight: \"normal\"\r\n            },\r\n            \"& .MuiDataGrid-columnHeader\": {\r\n              // Forced to use important since overriding inline styles\r\n              height: \"unset !important\"\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              // Forced to use important since overriding inline styles\r\n              maxHeight: \"168px !important\"\r\n            },\r\n            \"& .MuiDataGrid-row\": {\r\n              minHeight: \"66.5px !important\"\r\n              // maxHeight: \"168px !important\"\r\n            },\r\n            // \"& .MuiDataGrid-cell\": {\r\n            //   // Forced to use important since overriding inline styles\r\n            //   whiteSpace: \"normal\",\r\n            //   lineHeight: \"normal\",\r\n            //   height: \"unset !important\",\r\n            // }\r\n            '& .MuiDataGrid-cell:first-of-type': {\r\n              paddingLeft: '24px', // Add extra space for first column\r\n            },\r\n            '& .MuiDataGrid-columnHeader:first-of-type': {\r\n              paddingLeft: '24px', // Add extra space for first header\r\n            },\r\n          }}\r\n        />\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Pagination","_ref","page","onPageChange","className","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","_jsx","MuiPagination","variant","shape","color","count","onChange","event","newPage","CustomPagination","props","GridPagination","_objectSpread","ActionsComponent","CustomToolbar","Portal","container","document","getElementById","children","GridToolbarQuickFilter","size","GridSkeleton","_props$pageSize","theme","useTheme","intl","useIntl","localeText","useMemo","language","trTR","components","MuiDataGrid","defaultProps","enUS","DataGrid","MuiTablePagination","labelDisplayedRows","_ref2","from","to","concat","ignoreDiacritics","getRowClassName","params","indexRelativeToCurrentPage","sx","_defineProperty","gridClasses","row","palette","mode","ThemeMode","LIGHT","backgroundColor","background","default","divider","slots","pagination","toolbar","initialState","paginationModel","pageSize","pageSizeOptions","autoHeight","disableRowSelectionOnClick","disableColumnMenu","disableColumnFilter","disableColumnSelector","disableDensitySelector","UserList","items","useLoaderData","rows","value","columns","field","headerName","description","flex","minWidth","headerAlign","align","formatMessage","id","_Fragment","MainCard","content","title","FormattedMessage","secondary","Stack","direction","spacing","Box","CustomGrid","getRowId","descriptor","getRowHeight","whiteSpace","lineHeight","height","maxHeight","minHeight","paddingLeft"],"sourceRoot":""}